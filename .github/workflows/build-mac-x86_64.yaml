name: Build MacOS (x86_64)
on:
  push:
    branches: [ "feature/testing" ]
  pull_request:
    branches: [ "feature/testing" ]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Install XQuartz
        if: runner.os == 'macOS'
        run: |
            brew install --cask xquartz
            open -a XQuartz
            sleep 5 # Wait for XQuartz to start

            - name: Start Xvfb
              run: |
                Xvfb :99 -screen 0 1024x768x24 &
                export DISPLAY=:99

      - name: Run Tests
        env:
          DISPLAY: :99
        run: |
            java -Dorg.eclipse.swt.internal.gtk.cairoGraphics=false \
                 -Dorg.eclipse.swt.internal.gtk.useCairo=false \
                 -Djava.awt.headless=true \
                 -Dorg.eclipse.swt.internal.gtk.startOnFirstThread=true \
                 -jar your-swt-application.jar # Replace with your actual jar file
      - name: Describe current commit
        run: echo "commit_sha=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Remove Previous Build Artifacts
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.issue;
            (await github.rest.actions.listArtifactsForRepo({ owner, repo })).data.artifacts
              .filter(({ name }) => (name.startsWith('pdf-over-${{ github.event.pull_request.number || github.ref_name }}-') && name.endsWith('macos-x86_64')))
              .forEach(({ id, name }) => { console.log('Deleting '+name+' ('+id+')'); github.rest.actions.deleteArtifact({ owner, repo, artifact_id: id }); });
      - name: Check pdf-over-build directory
        run: |
          echo "Listing contents of pdf-over-build directory:"
          ls -la pdf-over-build

      - name: Extract zip file if exists
        run: |
          if [ -f "pdf-over-build/pdf-over_mac-aarch64.zip" ]; then
            echo "Extracting zip file..."
            unzip pdf-over-build/pdf-over_mac-aarch64.zip -d pdf-over-build/
          else
            echo "No zip file found."
          fi

      - name: Check extracted files
        run: |
          echo "Listing contents of pdf-over-build after extraction:"
          ls -la pdf-over-build

      - name: Make scripts executable
        run: |
          if [ -d "pdf-over-build" ]; then
            if ls pdf-over-build/*.sh 1> /dev/null 2>&1; then
              chmod +x pdf-over-build/*.sh
            else
              echo "No shell scripts found in pdf-over-build."
            fi
            if [ -d "pdf-over-build/jre/bin" ]; then
              chmod +x pdf-over-build/jre/bin/*
            else
              echo "Directory pdf-over-build/jre/bin does not exist."
            fi
          else
            echo "Directory pdf-over-build does not exist."
          fi
      - name: Tar bundle
        run: tar -C pdf-over-build -cvf pdf-over.tar ./
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pdf-over-feature-simple-ui-test-${{ env.commit_sha }}-macos-x86_64
          path: pdf-over.tar

permissions:
  contents: read
  actions: write